version: "3"
services:
  db:
    restart: always
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - ${POSTGRE_SQL_PORT}
    networks:
      - kafka_docker_net
  web:
    container_name: web
    build: .
    command: ["./entrypoint.sh"]
    volumes:
      - .:/app
    ports:
      - ${WEB_PORT}
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - celery-worker
      - celery-beat
    networks:
      - kafka_docker_net
  redis:
    image: redis:latest
    ports:
      - ${REDIS_PORT}
    networks:
      - kafka_docker_net
  celery-worker:
    build: .
    restart: always
    command: ["./celery-worker.sh"]
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - kafka_docker_net
  celery-beat:
    build: .
    restart: always
    command: ["./celery-beat.sh"]
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - kafka_docker_net
  localstack:
    container_name: aws-localstack
    image: localstack/localstack:latest
    restart: always
    hostname: localstack
    ports:
      - ${LOCALSTACK_PORTS}
    env_file:
      - .env
    volumes:
      - ./aws:/etc/localstack/init/ready.d
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - kafka_docker_net
networks:
  kafka_docker_net:
    external:
      name: kafka_docker_net
